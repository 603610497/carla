---
- module_name: carla
  doc: >
  # - CLASSES ------------------------------
  classes:
  - class_name: ActorAttributeType
    # - DESCRIPTION ------------------------
    doc: >
      Class that defines the type of attribute of a carla.ActorAttribute.
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: Bool
      doc: >
    - var_name: Int
      doc: >
    - var_name: Float
      doc: >
    - var_name: String
      doc: >
    - var_name: RGBColor
      doc: >

  - class_name: Color
    # - DESCRIPTION ------------------------
    doc: >
      Class that defines a 32-bit BGRA color.
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: r
      type: int
      doc: >
        Red color (0-255)
    - var_name: g
      type: int
      doc: >
        Green color (0-255)
    - var_name: b
      type: int
      doc: >
        Blue color (0-255)
    - var_name: a
      type: int
      doc: >
        Alpha channel (0-255)
    # - METHODS ----------------------------
    methods:
    - def_name: __init__
      params:
      - param_name: r
        type: int
        default: 0
        doc: >
      - param_name: g
        type: int
        default: 0
        doc: >
      - param_name: b
        type: int
        default: 0
        doc: >
      - param_name: a
        type: int
        default: 255
        doc: >
      doc: >
        Client constructor
    # --------------------------------------
    - def_name: __eq__
      params:
      - param_name: other
        type: carla.Color
      doc: >
    # --------------------------------------
    - def_name: __ne__
      params:
      - param_name: other
        type: carla.Color
      doc: >
    # --------------------------------------
    - def_name: __str__
      doc: >
    # --------------------------------------

  - class_name: ActorAttribute
    # - DESCRIPTION ------------------------
    doc: >
      Class that defines an attribute of a carla.ActorBlueprint.
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: id
      type: str
      doc: >
        The attribute's identifier
    - var_name: type
      type: carla.ActorAttributeType
      doc: >
        The attribute parameter type
    - var_name: recommended_values
      type: list(str)
      doc: >
        List of recommended values that the attribute may have.
    - var_name: is_modifiable
      type: bool
      doc: >
        True if the attribute is modifiable.
    # - METHODS ----------------------------
    methods:
    - def_name: as_bool
      doc: >
    # --------------------------------------
    - def_name: as_int
      doc: >
    # --------------------------------------
    - def_name: as_float
      doc: >
    # --------------------------------------
    - def_name: as_str
      doc: >
    # --------------------------------------
    - def_name: as_color
      doc: >
    # --------------------------------------
    - def_name: __eq__
      params:
      - param_name: other
        type: bool / int / float / str / carla.Color / carla.ActorAttribute
      doc: >
    # --------------------------------------
    - def_name: __ne__
      params:
      - param_name: other
        type: bool / int / float / str / carla.Color / carla.ActorAttribute
      doc: >
    # --------------------------------------
    - def_name: __nonzero__
      doc: >
    # --------------------------------------
    - def_name: __bool__
      doc: >
    # --------------------------------------
    - def_name: __int__
      doc: >
    # --------------------------------------
    - def_name: __float__
      doc: >
    # --------------------------------------
    - def_name: __str__
      doc: >
    # --------------------------------------
    - def_name: __str__
      doc: >
    # --------------------------------------

  - class_name: ActorBlueprint
    # - DESCRIPTION ------------------------
    doc: >
      Class that contains all the necessary information for spawning an Actor.
    # - PROPERTIES -------------------------
    instance_variables:
    - var_name: id
      type: str
      doc: >
        Actor blueprint identifier, e.g. `walker.pedestrian.0001`.
    - var_name: tags
      type: list(str)
      doc: >
        List of tags of an actor blueprint e.g. `['0001', 'pedestrian', 'walker']`
    # - METHODS ----------------------------
    methods:
    - def_name: has_tag
      return: bool
      params:
      - param_name: tag
        type: str
        doc: >
          e.g. 'walker'
      doc: >
        Returns `true` if an actor blueprint has the tag.
    # --------------------------------------
    - def_name: match_tags
      return: bool
      params:
      - param_name: wildcard_pattern
        type: str
      doc: >
        Test if any of the flags or id matches wildcard_pattern.
      note: > 
        The wildcard_pattern follows Unix shell-style wildcards.
    # --------------------------------------
    - def_name: has_attribute
      return: bool
      params:
      - param_name: id
        type: str
        doc: >
          e.g 'gender'
      doc: >
        Returns `true` if the blueprint contains the specified attribute
    # --------------------------------------
    - def_name: get_attribute
      return: carla.ActorAttribute 
      params:
      - param_name: id
        type: str
      doc: >
        Returns the current actor attribute through its id
      Return: carla.ActorAttribute
    # --------------------------------------
    - def_name: set_attribute
      params: 
      - param_name: id
        type: str
        doc: >
    # --------------------------------------
      - param_name: value
        type: str
        doc: >
      doc: >
        Sets an existing attribute to the actor's blueprint
      note: >
        Attribute can only be set or changed if it is modifiable
    # --------------------------------------
    - def_name: __len__
      doc: >
    # --------------------------------------
    - def_name: __iter__
      doc: >
    # --------------------------------------
    - def_name: __str__
      doc: >
    # --------------------------------------

  - class_name: BlueprintLibrary
    # - DESCRIPTION ------------------------
    doc: >
      A class that gives access to the blueprints provided for actor spawning and returns the carla.Actorblueprint that will be used for that. Each blueprint has an identifier and attributes that may or may not be modifiable depending on which. [Here](../bp_library/) is a reference containing every available blueprint and its specifics.  
    # - METHODS ----------------------------
    methods:
    - def_name: __getitem__
      params:
      - param_name: pos
        type: int
      return: carla.ActorBlueprint
      doc: >
        Returns the blueprint stored in `pos` position inside the data structure containing them. 
    # --------------------------------------
    - def_name: __iter__
      doc: >
        Method that allows iteration of this class. 
    # --------------------------------------
    - def_name: __len__
      return: int 
      doc: >
        Returns the amount of blueprints comprising the library. 
    # --------------------------------------
    - def_name: __str__
      return: string 
      doc: >
        Parses the identifiers for every blueprint and shows them on screen. 
    # --------------------------------------
    - def_name: filter
      params:
      - param_name: wildcard_pattern
        type: str
      doc: >
        Filters a list of blueprints matching the `wildcard_pattern` against the id and tags of every blueprint contained in this library and returns the result as a new one. Matching follows [fnmatch](https://docs.python.org/2/library/fnmatch.html) standard.
      return: carla.BlueprintLibrary
    # --------------------------------------
    - def_name: find
      params:
      - param_name: id
        type: str
      return: carla.ActorBlueprint
      doc: >
        Returns the blueprint corresponding to that identifier. 
    # --------------------------------------
...
